#V2
INFO FOR DB;
SELECT * FROM user;
-- Enable scope authentication directly in SurrealDB\nDEFINE SCOPE account SESSION 24h\n	SIGNUP ( CREATE user SET email = $email, pass = crypto::argon2::generate($pass) )\n	SIGNIN ( SELECT * FROM user WHERE email = $email AND crypto::argon2::compare(pass, $pass) )\n;
infor for ns
infor for db
info for ns
DEFINE SCOPE account SESSION 24h\n	SIGNUP ( CREATE user SET email = $email, pass = crypto::argon2::generate($pass) )\n	SIGNIN ( SELECT * FROM user WHERE email = $email AND crypto::argon2::compare(pass, $pass) )\n;
CREATE user SET email='flemming@intergate.io', pass = crypto::argon2::generate($pass);
SELECT * FROM user;
DELETE * FROM user;
DELETE FROM user;
SELECT * FROM user;
CREATE user SET email='flemming@intergate.io', pass = crypto::argon2::generate(flemming);
SELECT FROM user;
SELECT * FROM user;
DEFINE SCOPE account\n	SESSION 24h\n	SIGNUP ( CREATE user SET email = $email, pass = $pass )\n	SIGNIN ( SELECT * FROM user WHERE email = $email AND pass = $pass )\n;\n\nCREATE user SET email='flemming@intergate.io', pass = 'flemming';
SELECT * FROM user
INFO FOR DB;
INFO FOR NS;
INFO FOR DB;
INFO FOR NS;
SELECT * FROM user;
DEFINE SCOPE account\n	SESSION 24h\n	SIGNUP ( CREATE user SET email = $email, pass = $pass )\n	SIGNIN ( SELECT * FROM user WHERE email = $email AND pass = $pass )\n;
DEFINE TABLE user SCHEMAFULL\n  PERMISSIONS \n    FOR select, update WHERE id = $auth.id, \n    FOR create, delete NONE;\nDEFINE FIELD user ON user TYPE string;\nDEFINE FIELD pass ON user TYPE string;\nDEFINE FIELD settings.* ON user TYPE object;\nDEFINE FIELD settings.marketing ON user TYPE string;\nDEFINE FIELD tags ON user TYPE array;\nDEFINE INDEX idx_user ON user COLUMNS user UNIQUE;
select * from user;
INFO FOR DB;
INFO FOR NS;
INFO FOR DB;
DEFINE TABLE user SCHEMAFULL\n  PERMISSIONS\n    FOR select, update WHERE id = $auth.id,\n    FOR create, delete NONE;\nDEFINE FIELD email ON user TYPE string;\nDEFINE FIELD pass ON user TYPE string;\nDEFINE INDEX idx_user ON user COLUMNS email UNIQUE;
INFO FOR DB;
INFO FOR user;
INFO FOR TABLE user;
INFO FOR DB;
DEFINE TABLE user SCHEMAFULL\n  PERMISSIONS\n    FOR select, update WHERE id = $auth.id,\n    FOR create, delete NONE;\nDEFINE FIELD email ON user TYPE string;\nDEFINE FIELD pass ON user TYPE string;\nDEFINE INDEX idx_user ON user COLUMNS email UNIQUE;
DEFINE SCOPE account\n	SESSION 24h\n	SIGNUP ( CREATE user SET email = $email, pass = $pass )\n	SIGNIN ( SELECT * FROM user WHERE email = $email AND pass = $pass )\n;\n\nCREATE user SET email='flemming@intergate.io', pass = 'flemming';
INFO FOR TABLE user;
SELECT * FROM user;
CREATE user SET email='flemming@intergate.io', pass = 'flemming';
INFO FOR KV
DEFINE SCOPE account\n	SESSION 24h\n	SIGNUP ( CREATE user SET email = $email, pass = crypto::argon2::generate($pass) )\n	SIGNIN ( SELECT * FROM user WHERE email = $email AND crypto::argon2::compare(pass, $pass) )\n;\n\nCREATE user SET email='flemming@intergate.io', pass = crypto::argon2::generate($pass);
CREATE user SET email='flemming@intergate.io', pass = 'flemming';
SELECT * FROM User
SELECT * FROM user
DEFINE SCOPE account\n	SESSION 24h\n	SIGNUP ( CREATE user SET email = $email, pass = $pass )\n	SIGNIN ( SELECT * FROM user WHERE email = $email AND pass = $pass )\n;\n
UPDATE user SET email='flemming@intergate.io', pass = 'flemming';
SELECT * FROM user
DELETE FROM user;
CREATE user SET email='flemming@intergate.io', pass = 'flemming';
DEFINE SCOPE account\n	SESSION 24h\n	SIGNUP ( CREATE user SET email = $email, pass = crypto::argon2::generate($pass) )\n	SIGNIN ( SELECT * FROM user WHERE email = $email AND crypto::argon2::compare(pass, $pass) )\n;
CREATE user SET email='flemming@intergate.io', pass = crypto::argon2::generate($pass);
SELECT * FROM user
DELETE FROM user
CREATE user SET email='flemming@intergate.io', pass = crypto::argon2::generate($pass);
CREATE user SET email='flemming3@intergate.io', pass = crypto::argon2::generate('flemming');
DELETE FROM user
SELECT * FROM user
use ns intergate
use db test
SELECT * FROM user
info for db
info for ns
SELECT * FROM user
DEFINE TABLE user SCHEMAFULL\n  PERMISSIONS\n    FOR select, update WHERE id = $auth.id,\n    FOR create, delete NONE;\nDEFINE FIELD email ON user TYPE string;\nDEFINE FIELD pass ON user TYPE string;\nDEFINE FIELD firstName ON user TYPE string;\nDEFINE FIELD lastName ON user TYPE string;\nDEFINE FIELD phone ON user TYPE string;\nDEFINE FIELD address ON user TYPE string;\n\nDEFINE INDEX idx_user ON user COLUMNS email UNIQUE;
use ns intergate
use db test
select * from user
info for db
info for ns
DEFINE SCOPE account\n	SESSION 24h\n	SIGNUP ( CREATE user SET email = $email, pass = crypto::argon2::generate($pass) )\n	SIGNIN ( SELECT * FROM user WHERE email = $email AND crypto::argon2::compare(pass, $pass) )
info for ns
info for db
info for ns
info for db
DEFINE TABLE user SCHEMAFULL\n  PERMISSIONS\n    FOR select, update WHERE id = $auth.id,\n    FOR create, delete NONE;\nDEFINE FIELD email ON user TYPE string;\nDEFINE FIELD pass ON user TYPE string;\nDEFINE FIELD firstName ON user TYPE string;\nDEFINE FIELD lastName ON user TYPE string;\nDEFINE FIELD phone ON user TYPE string;\nDEFINE FIELD address ON user TYPE string;\nDEFINE INDEX idx_user ON user COLUMNS email UNIQUE;
DEFINE SCOPE account\n	SESSION 24h\n	SIGNUP ( CREATE user SET email = $email, pass = crypto::argon2::generate($pass) )\n	SIGNIN ( SELECT * FROM user WHERE email = $email AND crypto::argon2::compare(pass, $pass) )
info for db
